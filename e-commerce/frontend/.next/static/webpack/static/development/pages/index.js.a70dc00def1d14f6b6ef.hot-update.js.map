{"version":3,"file":"static/webpack/static/development/pages/index.js.a70dc00def1d14f6b6ef.hot-update.js","sources":["webpack:///./components/Item.js","webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Item extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        );\n    }\n}\n\nItem.propTypes = {\n\n};\n\nexport default Item;","import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport Item from './Item'\n\n// Write a graphQL query\nconst ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY {\n    items {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n    }\n  }\n`\n\n// Styles\nconst Center = styled.div`\n  text-align: center;\n`\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n`\n\nclass Items extends Component {\n  render() {\n    return (\n      <Center>\n        {/* render prop technique */}\n        <Query query={ALL_ITEMS_QUERY}>\n          {({ data, error, loading }) => {\n            // conditional rendering\n            if (loading) return <p>Loading...</p>\n            if (error) return <p>Error: {error.message}</p>\n\n            // console.log(payload)\n            console.log(data)\n            return (\n              <ItemsList>\n                {data.items.map(item => (\n                  <p>{item.title}</p>\n                ))}\n              </ItemsList>\n            )\n          }}\n        </Query>\n      </Center>\n    )\n  }\n}\n\nexport default Items\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAPA;AACA;AASA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAaA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAIA;;;;AAxBA;AACA;AA0BA;;;;A","sourceRoot":""}